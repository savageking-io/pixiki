#!/bin/bash

output_file=make.config
root_dir="$(dirname "$0")"
version="$(cat VERSION)"
assets_dir=assets
fonts_dir=$assets_dir/fonts
prefix=/usr
arch="$(uname -m)"
trigger="custom"
ext=
sdl_libs=
build_id="unknown"
archive_name="libevelengine"
skip_deps=0
conan_path=


showhelp() 
{
cat << HELPMSG
usage: configure [options]
Configure evelengine build 

Options:
  --help
    Display this help message

  --trigger=<trigger>
    Specify trigger of the build. "custom" is default

  --build-id=<build-id>
    Specify ID of the build

  --skip-deps
    Skips dependencies download via conan

  --conan=<path-to-conan>
    Specify path to conan binary

HELPMSG
}

while [ $# -ge 1 ]; do
	case "$1" in

	--trigger=*)
		trigger="`echo ${1} | awk '{print substr($0,11)}'`" ;;

    --build-id=*)
		build_id="`echo ${1} | awk '{print substr($0,12)}'`" ;;

    --skip-deps)
        skip_deps=1 ;;

    --conan=*)
        conan_path="`echo ${1} | awk '{print substr($0,9)}'`" ;;

    --help)
 		showhelp
 		exit 0
		;;

	*)
		showhelp
		exit 1
		;;

    esac

    shift
done

if [ $skip_deps -eq 1 ]; then
    echo "Skipping dependencies download"
else
    if [ "$conan_path" != "" ]; then
        echo "Specified path to conan: ${conan_path}"
    else
        conan_path=`which conan`
    fi

    if [ $? -ne 0 ]; then
        echo "Conan not found"
        conan_path=
    else
        echo "Found conan... $conan_path"
    fi

    if [ "$conan_path" != "" ]; then
        echo "Downloading dependencies specified in .conanfile"

        conan install ./.conanfile --build fmt --build gtest --build jsoncpp --build spdlog --build yaml-cpp --build bzip2 --build expat --build openssl --build sqlite3 --build zlib --build pcre --build poco -s compiler.libcxx=libstdc++17 > /tmp/conan-install.log
    fi
fi

if [ "$trigger" == "cron" ]; then
    trigger="nightly"
elif [ "$trigger" == "push" ]; then
    trigger="latest"
elif [ "$trigger" == "pull_request" ]; then
    trigger="test"
fi

if [ `uname -s` == "Darwin" ]; then
    echo "Configured for Darwin"
    sdl_libs="-lsdl2 -lsdl2_image -lsdl2_ttf"
elif [ `uname -s` == "Linux" ]; then
    echo "Configured for Linux"
    sdl_libs="-lSDL2 -lSDL2_image -lSDL2_ttf"
else
    echo "Unsupported platform"
    exit 112
fi

# Import Generate items generated by conan
echo "Checking Conanfile"
if [ ! -e "./conanbuildinfo.mak" ]; then
    echo "Missing conanbuildinfo.mak. Did you forget to run `conan install ./.conanfile`?"
fi


echo "# ${output_file} generated by configure script" > $output_file
echo "SDL_LIBS=${sdl_libs}" >> $output_file
echo "PREFIX=${prefix}" >> $output_file
echo "ARCH_NAME=${arch}" >> $output_file
echo "BUILD_TRIGGER=${trigger}" >> $output_file
echo "VERSION_NUMBER=${version}" >> $output_file
echo "BUILD_ID=${build_id}" >> $output_file

echo "export SDL_LIBS" >> $output_file
echo "export PREFIX" >> $output_file
echo "export ARCH_NAME" >> $output_file
echo "export BUILD_TRIGGER" >> $output_file
echo "export VERSION_NUMBER" >> $output_file
echo "export BUILD_ID" >> $output_file

